/* @flow strict */

type Event = {
  bubbles: boolean;
  cancelable: boolean;
  composed: boolean;
  currentTarget: Element;
  deepPath?: () => EventTarget[];
  defaultPrevented: boolean;
  eventPhase: number;
  isTrusted: boolean;
  scoped: boolean;
  srcElement: Element;
  target: Element;
  timeStamp: number;
  type: string;
  preventDefault(): void;
  stopImmediatePropagation(): void;
  stopPropagation(): void;
}

type EventHandler = (event: Event) => mixed

type EventListenerOptions = {
  capture?: boolean
};

declare module.exports: {
  on(name: string, selector: string, handler: EventHandler, options?: EventListenerOptions): void;
  off(name: string, selector: string, handler: EventHandler, options?: EventListenerOptions): void;
  fire(target: EventTarget, name: string, detail?: any): boolean;
};
